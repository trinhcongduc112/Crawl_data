# =============================================================
# File: check_test018_data.py
# Ki·ªÉm tra d·ªØ li·ªáu trong m√¥i tr∆∞·ªùng ch√≠nh test018.odoo.com
# =============================================================

import sys
import xmlrpc.client

# Fix encoding for Windows console
if sys.platform == 'win32':
    sys.stdout.reconfigure(encoding='utf-8')

# ===================== C·∫§U H√åNH CH√çNH =====================
ODOO_BASE_URL = "https://test018.odoo.com"
ODOO_DB_NAME = "test018"
ODOO_USER = "trinhcongduc0112@gmail.com"
ODOO_API_KEY = "3f623d85508792f81af911610db742d67a5d1845"

SPACE_NAME = "T√†i li·ªáu Abivin"
MODEL_ARTICLE = "knowledge.article"
# ====================================================

def odoo_login():
    print("\nüîê ƒêang k·∫øt n·ªëi v·ªõi Odoo (test018.odoo.com)...")
    common = xmlrpc.client.ServerProxy(f"{ODOO_BASE_URL}/xmlrpc/2/common")
    
    try:
        version_info = common.version()
        print(f"  ‚úì Server version: {version_info.get('server_version', 'Unknown')}")
    except Exception as e:
        print(f"  ‚úó L·ªói ki·ªÉm tra phi√™n b·∫£n: {e}")
    
    uid = common.authenticate(ODOO_DB_NAME, ODOO_USER, ODOO_API_KEY, {})
    if not uid:
        raise SystemExit("‚ùå X√°c th·ª±c Odoo th·∫•t b·∫°i.")
    print(f"  ‚úì ƒê√£ ƒëƒÉng nh·∫≠p v√†o Odoo v·ªõi user ID: {uid}")
    return xmlrpc.client.ServerProxy(f"{ODOO_BASE_URL}/xmlrpc/2/object"), uid


def odoo_call(models, uid, model, method, *args, **kwargs):
    return models.execute_kw(
        ODOO_DB_NAME, uid, ODOO_API_KEY,
        model, method, list(args), kwargs if kwargs else {}
    )


def main():
    models, uid = odoo_login()
    
    # T√¨m Space
    print(f"\nüìÅ T√¨m ki·∫øm Space: '{SPACE_NAME}'...")
    space_rec = odoo_call(
        models, uid, MODEL_ARTICLE, "search_read",
        [("name", "=", SPACE_NAME)], ["id"], limit=1
    )
    
    if not space_rec:
        print(f"‚ùå Kh√¥ng t√¨m th·∫•y Space '{SPACE_NAME}'")
        print(f"\nüí° Space '{SPACE_NAME}' ch∆∞a t·ªìn t·∫°i trong test018.odoo.com")
        print(f"   C·∫ßn import d·ªØ li·ªáu v√†o m√¥i tr∆∞·ªùng ch√≠nh n√†y!")
        return
    
    space_id = space_rec[0]["id"]
    print(f"  ‚úì T√¨m th·∫•y Space '{SPACE_NAME}' (ID: {space_id})")
    
    # ƒê·∫øm s·ªë articles trong Space
    print(f"\nüìä ƒêang ƒë·∫øm articles trong Space...")
    article_count = odoo_call(
        models, uid, MODEL_ARTICLE, "search_count",
        [("parent_id", "=", space_id)]
    )
    
    print(f"  ‚úì C√≥ {article_count} articles trong Space '{SPACE_NAME}'")
    
    # L·∫•y danh s√°ch 20 articles ƒë·∫ßu ti√™n ƒë·ªÉ xem
    print(f"\nüìã Danh s√°ch 20 articles ƒë·∫ßu ti√™n:")
    articles = odoo_call(
        models, uid, MODEL_ARTICLE, "search_read",
        [("parent_id", "=", space_id)],
        ["id", "name"], limit=20
    )
    
    for idx, article in enumerate(articles, 1):
        print(f"  {idx}. [{article['id']}] {article['name'][:60]}")
    
    # Ph√¢n lo·∫°i articles theo section
    print(f"\nüìä Ph√¢n t√≠ch d·ªØ li·ªáu theo section...")
    
    # ƒê·∫øm release notes
    release_notes = odoo_call(
        models, uid, MODEL_ARTICLE, "search_read",
        [("parent_id", "=", space_id), ("name", "ilike", "Release Note")],
        ["id"], limit=1000
    )
    
    print(f"  üìù Release Notes: {len(release_notes)} articles")
    
    # ƒê·∫øm user guide (th·ª≠ t√¨m c√°c patterns th∆∞·ªùng th·∫•y)
    print(f"\nüí° Ki·ªÉm tra th√™m d·ªØ li·ªáu...")
    
    all_articles = odoo_call(
        models, uid, MODEL_ARTICLE, "search_read",
        [("parent_id", "=", space_id)],
        ["id"], limit=1000
    )
    
    print(f"  üì¶ T·ªïng c·ªông: {len(all_articles)} articles")
    
    print("\n" + "="*60)
    print(f"‚úÖ K·∫æT QU·∫¢ KI·ªÇM TRA")
    print(f"   Space: '{SPACE_NAME}' (ID: {space_id})")
    print(f"   T·ªïng articles: {len(all_articles)}")
    print(f"   Release Notes: {len(release_notes)}")
    print("="*60)
    
    if len(all_articles) < 100:
        print("\n‚ö†Ô∏è  D·ªØ li·ªáu ch∆∞a ƒë·∫ßy ƒë·ªß trong m√¥i tr∆∞·ªùng ch√≠nh!")
        print(f"   Hi·ªán ch·ªâ c√≥ {len(all_articles)} articles")
        print(f"   C·∫ßn import th√™m d·ªØ li·ªáu v√†o ƒë√¢y.")


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è  ƒê√£ h·ªßy!")
    except Exception as e:
        print(f"\n‚ùå L·ªñI: {e}")
        import traceback
        traceback.print_exc()






